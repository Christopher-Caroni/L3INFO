reset;
option solver gurobi;

set PARCELLES;
set LEGUMES circular;

param N_ANNEES integer >= 0;
set ANNEES := 1 .. N_ANNEES circular;

param rendement {LEGUMES} >= 0;
param prix_vente {LEGUMES} >= 0;
param besoin_richesse {LEGUMES} >= 0;
param apport_richesse {LEGUMES} >= 0;

param richesse_initiale {PARCELLES} >= 0;

param kilo_engrais_bonus_dispo >= 0;
param rendement_engrais_richesse_par_kilo >= 0;

/*
est_affecte[a, l,p] =
- 1 si le légume l est affecté à la parcelle p pour l'année a
- 0 sinon
*/
var est_affecte {ANNEES, LEGUMES, PARCELLES} binary;

/*
richesse_fin_annee[a, p]
la richesse de la parcelle p à l'année a
*/
var richesse_fin_annee {ANNEES, PARCELLES};

/*
kilo_engrais_bonus_utilise[p]
le nombre de kilos d'engrais utilisé sur la parcelle p
*/
var kilo_engrais_bonus_utilise {PARCELLES};

var minimum_derniere_annee >= 0;

/*
On maximise la richesse de tous les parcelles, à la dernière année
*/
maximize minimum_richesse_fin_cycle :
		minimum_derniere_annee;

subject to trouver_minimum {p in PARCELLES} :
	minimum_derniere_annee <= richesse_fin_annee[N_ANNEES, p];

/*
La somme d'engrais utilisé sur toutes les parcelles est limitée par la quantité disponible initialement
*/
subject to engrais_bonus_limitee :
	sum {p in PARCELLES}
		kilo_engrais_bonus_utilise[p] <= kilo_engrais_bonus_dispo;

/*
Pour tous les légumes, ce légume doit être cultivée au minimum une fois par an
*/
subject to cultiver_tous_legumes_par_an {a in ANNEES, l in LEGUMES} :
	sum {p in PARCELLES}
  	est_affecte[a, l, p] >= 1;

/*
Tous les ans, une parcelle doit être cultivée, et par un seul légume au maximum.
*/
subject to max_un_legume_cultive_par_parcelle {p in PARCELLES, a in ANNEES} :
  sum {l in LEGUMES}
    est_affecte[a, l, p] = 1;

/*
	CAS INTIIAL:
	Pour l'année a==1, pour une parcelle p, un légume l ne peut y être cultivé que si
	le besoin en richese de ce légume est inféreur à la richesse initiale de cette parcelle
*/
subject to cycle_legume_parcelle_initiale {p in PARCELLES, l in LEGUMES} :
	est_affecte[1, l, p] <=
	if besoin_richesse[l] <= (richesse_initiale[p] + (kilo_engrais_bonus_utilise[p] * rendement_engrais_richesse_par_kilo)) then
		1
	else
		0;

/*
Pour chaque année a, pour une parcelle p, un légume l ne peut y être cultivé que si le légume précédant
dans le cycle y était aussi cultivé à l'année précédente.
*/
subject to cycle_legume_parcelle {a in ANNEES, p in PARCELLES, l in LEGUMES} :
	if a != 1 then est_affecte[a, l, p] <= est_affecte[prev(a), prev(l), p];


/*
	Pour (a==1), la fin de l'année initiale, la richesse est égale à la richesse intiale,
	moins le rendement du légume cultivé, plus l'apport de ce légume.
	*/
subject to cycle_richesse_initiale {p in PARCELLES, l in LEGUMES} :
	richesse_fin_annee[1, p] = (richesse_initiale[p] + (kilo_engrais_bonus_utilise[p] * rendement_engrais_richesse_par_kilo)) + ((-besoin_richesse[l] + apport_richesse[l]) * est_affecte[1, l, p]);

/*
Pour chaque année (a) (sauf a==1), la richesse d'une parcelle est égale à la richesse de la parcelle
à l'année (a-1) moins le rendement du légume cultivé, plus l'apport de ce légume.
*/
subject to richesse_cycle {a in ANNEES, p in PARCELLES, l in LEGUMES} :
	if a != 1 then richesse_fin_annee[a, p] = richesse_fin_annee[prev(a), p] + ((-besoin_richesse[l] + apport_richesse[l]) * est_affecte[a, l, p]);


data;

param N_ANNEES := 6;
param kilo_engrais_bonus_dispo := 500;
param rendement_engrais_richesse_par_kilo = 0.01;

set PARCELLES := A B C D E F G;
set LEGUMES := fruit feuille racine gousse engrais;

param :     rendement   prix_vente    besoin_richesse  apport_richesse   :=
fruit         2.7           4.3             20.2              0
feuille       2.6           1.2             10.1              0
racine        3.4           2.7             5.5               0
gousse        0.5           3.3               0             3.5
engrais         0             0               0            25.8;

param : richesse_initiale :=
A						43.2
B						12.1
C						20.8
D						16.8
E						5.7
F						16.3
G						15.1;
